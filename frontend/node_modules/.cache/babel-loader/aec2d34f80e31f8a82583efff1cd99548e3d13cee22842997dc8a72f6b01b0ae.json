{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Development/hackathon/hacknjit/frontend/src/components/questions/PageOne.js\";\nimport React from \"react\";\nimport { Button, RadioGroup, FormControl, FormLabel, Sheet } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PageOne() {\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      color: \"primary\",\n      children: \"What is your goal?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n      defaultValue: \"Lose Weight\",\n      size: \"lg\",\n      sx: {\n        gap: 1.5\n      },\n      children: ['512GB', '1TB', '2TB'].map(value => /*#__PURE__*/_jsxDEV(Sheet, {\n        sx: {\n          p: 2,\n          borderRadius: 'md',\n          boxShadow: 'sm'\n        },\n        children: /*#__PURE__*/_jsxDEV(Radio, {\n          label: `${value} SSD storage`,\n          overlay: true,\n          disableIcon: true,\n          value: value,\n          slotProps: {\n            label: ({\n              checked\n            }) => ({\n              sx: {\n                fontWeight: 'lg',\n                fontSize: 'md',\n                color: checked ? 'text.primary' : 'text.secondary'\n              }\n            }),\n            action: ({\n              checked\n            }) => ({\n              sx: theme => ({\n                ...(checked && {\n                  '--variant-borderWidth': '2px',\n                  '&&': {\n                    // && to increase the specificity to win the base :hover styles\n                    borderColor: theme.vars.palette.primary[500]\n                  }\n                })\n              })\n            })\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = PageOne;\nvar _c;\n$RefreshReg$(_c, \"PageOne\");","map":{"version":3,"names":["React","Button","RadioGroup","FormControl","FormLabel","Sheet","jsxDEV","_jsxDEV","PageOne","children","color","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","size","sx","gap","map","value","p","borderRadius","boxShadow","Radio","label","overlay","disableIcon","slotProps","checked","fontWeight","fontSize","action","theme","borderColor","vars","palette","primary","_c","$RefreshReg$"],"sources":["/Users/julian/Development/hackathon/hacknjit/frontend/src/components/questions/PageOne.js"],"sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  RadioGroup,\n  FormControl,\n  FormLabel,\n  Sheet,\n} from \"@mui/material\";\nexport default function PageOne() {\n  return (\n    <FormControl>\n      <FormLabel color=\"primary\">What is your goal?</FormLabel>\n      <RadioGroup\n        defaultValue=\"Lose Weight\"\n        size=\"lg\"\n        sx={{ gap: 1.5 }}\n      >\n        {['512GB', '1TB', '2TB'].map((value) => (\n          <Sheet\n            key={value}\n            sx={{\n              p: 2,\n              borderRadius: 'md',\n              boxShadow: 'sm',\n            }}\n          >\n            <Radio\n              label={`${value} SSD storage`}\n              overlay\n              disableIcon\n              value={value}\n              slotProps={{\n                label: ({ checked }) => ({\n                  sx: {\n                    fontWeight: 'lg',\n                    fontSize: 'md',\n                    color: checked ? 'text.primary' : 'text.secondary',\n                  },\n                }),\n                action: ({ checked }) => ({\n                  sx: (theme) => ({\n                    ...(checked && {\n                      '--variant-borderWidth': '2px',\n                      '&&': {\n                        // && to increase the specificity to win the base :hover styles\n                        borderColor: theme.vars.palette.primary[500],\n                      },\n                    }),\n                  }),\n                }),\n              }}\n            />\n          </Sheet>\n        ))}\n      </RadioGroup>\n    </FormControl>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,MAAM,EACNC,UAAU,EACVC,WAAW,EACXC,SAAS,EACTC,KAAK,QACA,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvB,eAAe,SAASC,OAAOA,CAAA,EAAG;EAChC,oBACED,OAAA,CAACJ,WAAW;IAAAM,QAAA,gBACVF,OAAA,CAACH,SAAS;MAACM,KAAK,EAAC,SAAS;MAAAD,QAAA,EAAC;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eACzDP,OAAA,CAACL,UAAU;MACTa,YAAY,EAAC,aAAa;MAC1BC,IAAI,EAAC,IAAI;MACTC,EAAE,EAAE;QAAEC,GAAG,EAAE;MAAI,CAAE;MAAAT,QAAA,EAEhB,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAACU,GAAG,CAAEC,KAAK,iBACjCb,OAAA,CAACF,KAAK;QAEJY,EAAE,EAAE;UACFI,CAAC,EAAE,CAAC;UACJC,YAAY,EAAE,IAAI;UAClBC,SAAS,EAAE;QACb,CAAE;QAAAd,QAAA,eAEFF,OAAA,CAACiB,KAAK;UACJC,KAAK,EAAG,GAAEL,KAAM,cAAc;UAC9BM,OAAO;UACPC,WAAW;UACXP,KAAK,EAAEA,KAAM;UACbQ,SAAS,EAAE;YACTH,KAAK,EAAEA,CAAC;cAAEI;YAAQ,CAAC,MAAM;cACvBZ,EAAE,EAAE;gBACFa,UAAU,EAAE,IAAI;gBAChBC,QAAQ,EAAE,IAAI;gBACdrB,KAAK,EAAEmB,OAAO,GAAG,cAAc,GAAG;cACpC;YACF,CAAC,CAAC;YACFG,MAAM,EAAEA,CAAC;cAAEH;YAAQ,CAAC,MAAM;cACxBZ,EAAE,EAAGgB,KAAK,KAAM;gBACd,IAAIJ,OAAO,IAAI;kBACb,uBAAuB,EAAE,KAAK;kBAC9B,IAAI,EAAE;oBACJ;oBACAK,WAAW,EAAED,KAAK,CAACE,IAAI,CAACC,OAAO,CAACC,OAAO,CAAC,GAAG;kBAC7C;gBACF,CAAC;cACH,CAAC;YACH,CAAC;UACH;QAAE;UAAA1B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GAhCGM,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiCL,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAElB;AAACwB,EAAA,GAjDuB9B,OAAO;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}